module.export;
makeJQueryPlugin = ($ = global.jQuery, window = global.window) => {
    (function (_old) {
        var _fn_top = function (who) {
            var _top;
            var _o;
            if ($.isNumeric(who)) {
                _top = who;
            }
            else if (Array.isArray(who) && who.length) {
                for (let elem of who) {
                    let _o;
                    if (elem && (_o = $(elem)) && _o.length) {
                        _top = _o.offset().top;
                        break;
                    }
                }
            }
            else if ((_o = $(who)) && _o.length) {
                _top = _o.offset().top;
            }
            return _top;
        };
        if (typeof _old === 'undefined') {
            $.fn.scrollTo = function (who, offset) {
                let _top = _fn_top(who);
                if (offset) {
                    _top = (_top ? _top : 0) + _fn_top(offset);
                }
                if (_top !== undefined) {
                    this.finish().scrollTop(_top);
                }
                return this;
            };
        }
        if (typeof $.scrollTo === 'undefined') {
            $.scrollTo = function (who, offset) {
                return $(window).scrollTo(who, offset);
            };
        }
    })($.fn.scrollTo);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsVG8uanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbImxpYi9qcXVlcnkvc2Nyb2xsVG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsTUFBTSxDQUFDLE1BQU0sQ0FBQTtBQUFDLGdCQUFnQixHQUFHLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRTtJQUU5RSxDQUFDLFVBQVUsSUFBSTtRQUVkLElBQUksT0FBTyxHQUFHLFVBQVUsR0FBRztZQUUxQixJQUFJLElBQUksQ0FBQztZQUNULElBQUksRUFBRSxDQUFDO1lBRVAsSUFBSSxDQUFDLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxFQUNwQjtnQkFDQyxJQUFJLEdBQUcsR0FBRyxDQUFDO2FBQ1g7aUJBQ0ksSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEVBQ3pDO2dCQUNDLEtBQUssSUFBSSxJQUFJLElBQUksR0FBRyxFQUNwQjtvQkFDQyxJQUFJLEVBQUUsQ0FBQztvQkFFUCxJQUFJLElBQUksSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUN2Qzt3QkFDQyxJQUFJLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQzt3QkFDdkIsTUFBTTtxQkFDTjtpQkFDRDthQUNEO2lCQUNJLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLE1BQU0sRUFDbkM7Z0JBQ0MsSUFBSSxHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUM7YUFDdkI7WUFFRCxPQUFPLElBQUksQ0FBQztRQUNiLENBQUMsQ0FBQztRQUdGLElBQUksT0FBTyxJQUFJLEtBQUssV0FBVyxFQUMvQjtZQUNDLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxHQUFHLFVBQVUsR0FBRyxFQUFFLE1BQU07Z0JBRXBDLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFFeEIsSUFBSSxNQUFNLEVBQ1Y7b0JBQ0MsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztpQkFDM0M7Z0JBRUQsSUFBSSxJQUFJLEtBQUssU0FBUyxFQUN0QjtvQkFDQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUM5QjtnQkFFRCxPQUFPLElBQUksQ0FBQztZQUNiLENBQUMsQ0FBQztTQUNGO1FBR0QsSUFBSSxPQUFPLENBQUMsQ0FBQyxRQUFRLEtBQUssV0FBVyxFQUNyQztZQUNDLENBQUMsQ0FBQyxRQUFRLEdBQUcsVUFBVSxHQUFHLEVBQUUsTUFBTTtnQkFFakMsT0FBTyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztZQUN4QyxDQUFDLENBQUM7U0FDRjtJQUNGLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDbkIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IHVzZXIgb24gMjAxNy83LzEzLzAxMy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0IG1ha2VKUXVlcnlQbHVnaW4gPSAoJCA9IGdsb2JhbC5qUXVlcnksIHdpbmRvdyA9IGdsb2JhbC53aW5kb3cpID0+XG57XG5cdChmdW5jdGlvbiAoX29sZClcblx0e1xuXHRcdHZhciBfZm5fdG9wID0gZnVuY3Rpb24gKHdobylcblx0XHR7XG5cdFx0XHR2YXIgX3RvcDtcblx0XHRcdHZhciBfbztcblxuXHRcdFx0aWYgKCQuaXNOdW1lcmljKHdobykpXG5cdFx0XHR7XG5cdFx0XHRcdF90b3AgPSB3aG87XG5cdFx0XHR9XG5cdFx0XHRlbHNlIGlmIChBcnJheS5pc0FycmF5KHdobykgJiYgd2hvLmxlbmd0aClcblx0XHRcdHtcblx0XHRcdFx0Zm9yIChsZXQgZWxlbSBvZiB3aG8pXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsZXQgX287XG5cblx0XHRcdFx0XHRpZiAoZWxlbSAmJiAoX28gPSAkKGVsZW0pKSAmJiBfby5sZW5ndGgpXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0X3RvcCA9IF9vLm9mZnNldCgpLnRvcDtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZiAoKF9vID0gJCh3aG8pKSAmJiBfby5sZW5ndGgpXG5cdFx0XHR7XG5cdFx0XHRcdF90b3AgPSBfby5vZmZzZXQoKS50b3A7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBfdG9wO1xuXHRcdH07XG5cbi8vXHRcdFx0aWYgKCEkLmlzZnVuY3Rpb24oX29sZCkpXG5cdFx0aWYgKHR5cGVvZiBfb2xkID09PSAndW5kZWZpbmVkJylcblx0XHR7XG5cdFx0XHQkLmZuLnNjcm9sbFRvID0gZnVuY3Rpb24gKHdobywgb2Zmc2V0KVxuXHRcdFx0e1xuXHRcdFx0XHRsZXQgX3RvcCA9IF9mbl90b3Aod2hvKTtcblxuXHRcdFx0XHRpZiAob2Zmc2V0KVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0X3RvcCA9IChfdG9wID8gX3RvcCA6IDApICsgX2ZuX3RvcChvZmZzZXQpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKF90b3AgIT09IHVuZGVmaW5lZClcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRoaXMuZmluaXNoKCkuc2Nyb2xsVG9wKF90b3ApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9O1xuXHRcdH1cblxuLy9cdFx0XHRpZiAoISQuaXNmdW5jdGlvbigkLnNjcm9sbFRvKSlcblx0XHRpZiAodHlwZW9mICQuc2Nyb2xsVG8gPT09ICd1bmRlZmluZWQnKVxuXHRcdHtcblx0XHRcdCQuc2Nyb2xsVG8gPSBmdW5jdGlvbiAod2hvLCBvZmZzZXQpXG5cdFx0XHR7XG5cdFx0XHRcdHJldHVybiAkKHdpbmRvdykuc2Nyb2xsVG8od2hvLCBvZmZzZXQpO1xuXHRcdFx0fTtcblx0XHR9XG5cdH0pKCQuZm4uc2Nyb2xsVG8pO1xufTtcbiJdfQ==